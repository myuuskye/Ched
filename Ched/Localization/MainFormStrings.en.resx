<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AbortAtLastNote" xml:space="preserve">
    <value>Stop At Last Note</value>
  </data>
  <data name="BookProperty" xml:space="preserve">
    <value>Score Properties</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="Cut" xml:space="preserve">
    <value>Cut</value>
  </data>
  <data name="DeleteEvent" xml:space="preserve">
    <value>Delete Event</value>
  </data>
  <data name="EditMenu" xml:space="preserve">
    <value>Edit(&amp;E)</value>
  </data>
  <data name="Eraser" xml:space="preserve">
    <value>Eraser</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="FileMenu" xml:space="preserve">
    <value>File(&amp;F)</value>
  </data>
  <data name="FlipSelectedNotes" xml:space="preserve">
    <value>Flip Selected Notes</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="HelpMenu" xml:space="preserve">
    <value>Help(&amp;H)</value>
  </data>
  <data name="HighSpeed" xml:space="preserve">
    <value>High Speed Selection</value>
  </data>
  <data name="InsertMenu" xml:space="preserve">
    <value>Insert(&amp;I)</value>
  </data>
  <data name="NewFile" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="OpenFile" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="Paste" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="PasteFlipped" xml:space="preserve">
    <value>Paste Flipped</value>
  </data>
  <data name="Pen" xml:space="preserve">
    <value>Pen</value>
  </data>
  <data name="Play" xml:space="preserve">
    <value>Play / Stop</value>
  </data>
  <data name="PlayMenu" xml:space="preserve">
    <value>Play(&amp;P)</value>
  </data>
  <data name="Plugin" xml:space="preserve">
    <value>Plugin</value>
  </data>
  <data name="Redo" xml:space="preserve">
    <value>Redo</value>
  </data>
  <data name="RemoveEvents" xml:space="preserve">
    <value>Remove Selected Events</value>
  </data>
  <data name="RemoveSelectedNotes" xml:space="preserve">
    <value>Remove Selected Notes</value>
  </data>
  <data name="SaveAs" xml:space="preserve">
    <value>Save As</value>
  </data>
  <data name="SaveFile" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ScorePreview" xml:space="preserve">
    <value>Score Preview</value>
  </data>
  <data name="Selection" xml:space="preserve">
    <value>Selection</value>
  </data>
  <data name="Stop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="TimeSignature" xml:space="preserve">
    <value>Time Signature Selection</value>
  </data>
  <data name="Undo" xml:space="preserve">
    <value>Undo</value>
  </data>
  <data name="VersionInfo" xml:space="preserve">
    <value>Version Info</value>
  </data>
  <data name="ViewMenu" xml:space="preserve">
    <value>View(&amp;V)</value>
  </data>
  <data name="ZoomIn" xml:space="preserve">
    <value>Zoom In</value>
  </data>
  <data name="ZoomOut" xml:space="preserve">
    <value>Zoom Out</value>
  </data>
  <data name="AirDown" xml:space="preserve">
    <value>AIR DOWN</value>
  </data>
  <data name="AirLeftDown" xml:space="preserve">
    <value>AIR DOWN LEFT</value>
  </data>
  <data name="AirLeftUp" xml:space="preserve">
    <value>AIR UP LEFT</value>
  </data>
  <data name="AirRightDown" xml:space="preserve">
    <value>AIR DOWN RIGHT</value>
  </data>
  <data name="AirRightUp" xml:space="preserve">
    <value>AIR UP RIGHT</value>
  </data>
  <data name="AirUp" xml:space="preserve">
    <value>AIR UP</value>
  </data>
  <data name="Custom" xml:space="preserve">
    <value>Custom</value>
  </data>
  <data name="Division" xml:space="preserve">
    <value> Division</value>
  </data>
  <data name="SlideStep" xml:space="preserve">
    <value>SLIDE (STEP)</value>
  </data>
  <data name="InsertAirWithAirAction" xml:space="preserve">
    <value>Add AIR with AIR-ACTION</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="NarrowLaneWidth" xml:space="preserve">
    <value>Narrow Lane Width</value>
  </data>
  <data name="WidenLaneWidth" xml:space="preserve">
    <value>Widen Lane Width</value>
  </data>
  <data name="SelectAll" xml:space="preserve">
    <value>Select All</value>
  </data>
  <data name="SelectToBeginning" xml:space="preserve">
    <value>Select to Beginning</value>
  </data>
  <data name="SelectToEnd" xml:space="preserve">
    <value>Select to End</value>
  </data>
  <data name="Artist" xml:space="preserve">
    <value>Artist</value>
  </data>
  <data name="BasicInformation" xml:space="preserve">
    <value>Basic Information</value>
  </data>
  <data name="Browse" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="MusicInformation" xml:space="preserve">
    <value>Music Information</value>
  </data>
  <data name="NotesDesigner" xml:space="preserve">
    <value>Note Designer</value>
  </data>
  <data name="Offset" xml:space="preserve">
    <value>Offset</value>
  </data>
  <data name="SoundFile" xml:space="preserve">
    <value>Sound File</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="AdditionalData" xml:space="preserve">
    <value>Additional Data</value>
  </data>
  <data name="Difficulty" xml:space="preserve">
    <value>Difficulty</value>
  </data>
  <data name="JacketFile" xml:space="preserve">
    <value>Jacket File</value>
  </data>
  <data name="Level" xml:space="preserve">
    <value>Level</value>
  </data>
  <data name="InsertSingleBlankAtBeginning" xml:space="preserve">
    <value>Insert a single blank space at the beginning</value>
  </data>
  <data name="KeyboardShortcuts" xml:space="preserve">
    <value>Keyboard Shortcuts</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="Command" xml:space="preserve">
    <value>Command</value>
  </data>
  <data name="KeyCombination" xml:space="preserve">
    <value>Key Combination</value>
  </data>
  <data name="ResetAll" xml:space="preserve">
    <value>Reset All</value>
  </data>
  <data name="GuideVolume" xml:space="preserve">
    <value>Guide Volume (Global)</value>
  </data>
  <data name="MusicVolume" xml:space="preserve">
    <value>Music Volume</value>
  </data>
  <data name="SlowDownPreview" xml:space="preserve">
    <value>Slow Down Preview</value>
  </data>
  <data name="LaneOffset" xml:space="preserve">
    <value>Lane Offset</value>
  </data>
  <data name="LaneOffsetdis" xml:space="preserve">
    <value>This is an extended specification limited to ChartCyanvas. (sus only)</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="LaneVisual" xml:space="preserve">
    <value>Lane Display</value>
  </data>
  <data name="ThemeMenu" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="ThemeBlack" xml:space="preserve">
    <value>Black</value>
  </data>
  <data name="ThemeWhite" xml:space="preserve">
    <value>White</value>
  </data>
  <data name="PJsekai" xml:space="preserve">
    <value>PJsekai</value>
  </data>
  <data name="ChannelMenu" xml:space="preserve">
    <value>Channel</value>
  </data>
  <data name="Channel" xml:space="preserve">
    <value>Channel</value>
  </data>
  <data name="ChannelMovable" xml:space="preserve">
    <value>Edit by Channel</value>
  </data>
  <data name="ChannelNote" xml:space="preserve">
    <value>Note Visual</value>
  </data>
  <data name="Visual1" xml:space="preserve">
    <value>Hidden</value>
  </data>
  <data name="Visual2" xml:space="preserve">
    <value>Translucent</value>
  </data>
  <data name="Visual3" xml:space="preserve">
    <value>Display</value>
  </data>
  <data name="ChangeChannelSelectedNotes" xml:space="preserve">
    <value>Move Notes Channel within Selection</value>
  </data>
  <data name="LaneMenu" xml:space="preserve">
    <value>Lane</value>
  </data>
  <data name="ColorBlue" xml:space="preserve">
    <value>Blue</value>
  </data>
  <data name="ColorCyan" xml:space="preserve">
    <value>Cyan</value>
  </data>
  <data name="ColorGreen" xml:space="preserve">
    <value>Green</value>
  </data>
  <data name="ColorPurple" xml:space="preserve">
    <value>Purple</value>
  </data>
  <data name="ColorRed" xml:space="preserve">
    <value>Red</value>
  </data>
  <data name="ColorYellow" xml:space="preserve">
    <value>Yellow</value>
  </data>
  <data name="ColorNeutral" xml:space="preserve">
    <value>Neutral</value>
  </data>
  <data name="ChannelSounds" xml:space="preserve">
    <value>Sounds by Channel</value>
  </data>
  <data name="Paint" xml:space="preserve">
    <value>Paint</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="ChannelSpeeds" xml:space="preserve">
    <value>Insert Form Speed by Channel</value>
  </data>
  <data name="Event" xml:space="preserve">
    <value>Event</value>
  </data>
  <data name="Property" xml:space="preserve">
    <value>Property</value>
  </data>
  <data name="LaneIndex" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="Tick" xml:space="preserve">
    <value>Tick</value>
  </data>
  <data name="Width" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="isVisible" xml:space="preserve">
    <value>isVisible</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>Colors</value>
  </data>
  <data name="GuideFadeTypes" xml:space="preserve">
    <value>Default fade type for guides</value>
  </data>
  <data name="Hide" xml:space="preserve">
    <value>is Hidden</value>
  </data>
  <data name="isOnGuide" xml:space="preserve">
    <value>If on GuideNote</value>
  </data>
  <data name="isOnSlide" xml:space="preserve">
    <value>If on SlideNote</value>
  </data>
  <data name="Notes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="SpeedCh" xml:space="preserve">
    <value>Speed Channel</value>
  </data>
  <data name="SpeedRatio" xml:space="preserve">
    <value>Speed Ratio</value>
  </data>
  <data name="AllowStepCh" xml:space="preserve">
    <value>Allow step channels (USC only)</value>
  </data>
  <data name="EraceSlideEnd" xml:space="preserve">
    <value>Erases Slide End</value>
  </data>
  <data name="EraceSlideStart" xml:space="preserve">
    <value>Erases Slide Start</value>
  </data>
  <data name="ChangeGuideFade" xml:space="preserve">
    <value>Changes Guide Fade</value>
  </data>
  <data name="ChangeEndTrace" xml:space="preserve">
    <value>Changes End Trace</value>
  </data>
  <data name="ChangeStartTrace" xml:space="preserve">
    <value>Changes Start Trace</value>
  </data>
  <data name="GuideIn" xml:space="preserve">
    <value>Fade In</value>
  </data>
  <data name="GuideOut" xml:space="preserve">
    <value>Fade Out</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="SlideEndTypes" xml:space="preserve">
    <value>Slide End Types</value>
  </data>
  <data name="SlideNormal" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="SlideStartTypes" xml:space="preserve">
    <value>Slide Start Types</value>
  </data>
  <data name="SlideTrace" xml:space="preserve">
    <value>Trace</value>
  </data>
</root>